

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu May 28 10:24:17 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     _ADCON0	set	4034
    28  0000                     _ADCON0bits	set	4034
    29  0000                     _ADCON1	set	4033
    30  0000                     _ADCON2	set	4032
    31  0000                     _ADRESH	set	4036
    32  0000                     _ADRESL	set	4035
    33  0000                     _INTCONbits	set	4082
    34  0000                     _PIE1bits	set	3997
    35  0000                     _PIR1bits	set	3998
    36  0000                     _PORTBbits	set	3969
    37  0000                     _RCREG	set	4014
    38  0000                     _RCSTA	set	4011
    39  0000                     _RCSTAbits	set	4011
    40  0000                     _SPBRG	set	4015
    41  0000                     _SPBRGH	set	4016
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _TXREG	set	4013
    45  0000                     _TXSTA	set	4012
    46  0000                     _TXSTAbits	set	4012
    47                           
    48                           	psect	smallconst
    49  000808                     __psmallconst:
    50                           	opt stack 0
    51  000808                     __stringdata:
    52                           	opt stack 0
    53  000808                     STR_3:
    54  000808  56                 	db	86	;'V'
    55  000809  61                 	db	97	;'a'
    56  00080A  6C                 	db	108	;'l'
    57  00080B  6F                 	db	111	;'o'
    58  00080C  72                 	db	114	;'r'
    59  00080D  20                 	db	32
    60  00080E  41                 	db	65	;'A'
    61  00080F  44                 	db	68	;'D'
    62  000810  3A                 	db	58	;':'
    63  000811  20                 	db	32
    64  000812  00                 	db	0
    65  000813                     STR_2:
    66  000813  64                 	db	100	;'d'
    67  000814  65                 	db	101	;'e'
    68  000815  73                 	db	115	;'s'
    69  000816  6C                 	db	108	;'l'
    70  000817  69                 	db	105	;'i'
    71  000818  67                 	db	103	;'g'
    72  000819  6F                 	db	111	;'o'
    73  00081A  75                 	db	117	;'u'
    74  00081B  00                 	db	0
    75  00081C                     __end_of__stringdata:
    76                           	opt stack 0
    77                           
    78                           ; #config settings
    79  00081C  00                 	db	0	; dummy byte at the end
    80  0000                     
    81                           	psect	cinit
    82  007BDC                     __pcinit:
    83                           	opt stack 0
    84  007BDC                     start_initialization:
    85                           	opt stack 0
    86  007BDC                     __initialization:
    87                           	opt stack 0
    88                           
    89                           ; Clear objects allocated to COMRAM (3 bytes)
    90  007BDC  6A2C               	clrf	(__pbssCOMRAM+2)& (0+255),c
    91  007BDE  6A2B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  007BE0  6A2A               	clrf	__pbssCOMRAM& (0+255),c
    93  007BE2                     end_of_initialization:
    94                           	opt stack 0
    95  007BE2                     __end_of__initialization:
    96                           	opt stack 0
    97  007BE2  0E00               	movlw	low (__Lsmallconst shr (0+16))
    98  007BE4  6EF8               	movwf	tblptru,c
    99  007BE6  0E08               	movlw	high __Lsmallconst
   100  007BE8  6EF7               	movwf	tblptrh,c
   101  007BEA  0100               	movlb	0
   102  007BEC  EF66  F03F         	goto	_main	;jump to C main() function
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           
   106                           	psect	bssCOMRAM
   107  00002A                     __pbssCOMRAM:
   108                           	opt stack 0
   109  00002A                     _i:
   110                           	opt stack 0
   111  00002A                     	ds	2
   112  00002C                     _USART_Status:
   113                           	opt stack 0
   114  00002C                     	ds	1
   115                           tblptru	equ	0xFF8
   116                           tblptrh	equ	0xFF7
   117                           
   118                           	psect	cstackCOMRAM
   119  000001                     __pcstackCOMRAM:
   120                           	opt stack 0
   121  000001                     ?_OpenUSART:
   122                           	opt stack 0
   123  000001                     ??_Delay1Second:
   124  000001                     ?_WriteUSART:
   125                           	opt stack 0
   126  000001                     ?_OpenADC:
   127                           	opt stack 0
   128  000001                     ?_SetChanADC:
   129                           	opt stack 0
   130  000001                     ?_ReadADC:
   131                           	opt stack 0
   132  000001                     ?___lwdiv:
   133                           	opt stack 0
   134  000001                     ?___lwmod:
   135                           	opt stack 0
   136  000001                     OpenADC@config:
   137                           	opt stack 0
   138  000001                     SetChanADC@channel:
   139                           	opt stack 0
   140  000001                     OpenUSART@config:
   141                           	opt stack 0
   142  000001                     ReadUSART@data:
   143                           	opt stack 0
   144  000001                     WriteUSART@data:
   145                           	opt stack 0
   146  000001                     ___lwdiv@dividend:
   147                           	opt stack 0
   148  000001                     ___lwmod@dividend:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x0
   152  000001                     	ds	1
   153  000002                     ?_putrsUSART:
   154                           	opt stack 0
   155  000002                     ??_SetChanADC:
   156  000002                     ?_putsUSART:
   157                           	opt stack 0
   158  000002                     OpenADC@config2:
   159                           	opt stack 0
   160  000002                     OpenUSART@spbrg:
   161                           	opt stack 0
   162  000002                     putrsUSART@data:
   163                           	opt stack 0
   164  000002                     putsUSART@data:
   165                           	opt stack 0
   166                           
   167                           ; 2 bytes @ 0x1
   168  000002                     	ds	1
   169  000003                     OpenADC@portconfig:
   170                           	opt stack 0
   171  000003                     ___lwdiv@divisor:
   172                           	opt stack 0
   173  000003                     ___lwmod@divisor:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x2
   177  000003                     	ds	1
   178  000004                     ??_OpenADC:
   179  000004                     
   180                           ; 0 bytes @ 0x3
   181  000004                     	ds	1
   182  000005                     ??___lwdiv:
   183  000005                     ??___lwmod:
   184                           
   185                           ; 0 bytes @ 0x4
   186  000005                     	ds	1
   187  000006                     ___lwmod@counter:
   188                           	opt stack 0
   189  000006                     ___lwdiv@quotient:
   190                           	opt stack 0
   191                           
   192                           ; 2 bytes @ 0x5
   193  000006                     	ds	2
   194  000008                     ___lwdiv@counter:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x7
   198  000008                     	ds	1
   199  000009                     ?_utoa:
   200                           	opt stack 0
   201  000009                     utoa@buf:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x8
   205  000009                     	ds	2
   206  00000B                     utoa@val:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0xA
   210  00000B                     	ds	2
   211  00000D                     utoa@base:
   212                           	opt stack 0
   213                           
   214                           ; 2 bytes @ 0xC
   215  00000D                     	ds	2
   216  00000F                     utoa@v:
   217                           	opt stack 0
   218                           
   219                           ; 2 bytes @ 0xE
   220  00000F                     	ds	2
   221  000011                     utoa@c:
   222                           	opt stack 0
   223                           
   224                           ; 1 bytes @ 0x10
   225  000011                     	ds	1
   226  000012                     ?_itoa:
   227                           	opt stack 0
   228  000012                     itoa@buf:
   229                           	opt stack 0
   230                           
   231                           ; 2 bytes @ 0x11
   232  000012                     	ds	2
   233  000014                     itoa@val:
   234                           	opt stack 0
   235                           
   236                           ; 2 bytes @ 0x13
   237  000014                     	ds	2
   238  000016                     itoa@base:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x15
   242  000016                     	ds	2
   243  000018                     itoa@cp:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x17
   247  000018                     	ds	2
   248  00001A                     
   249                           ; 2 bytes @ 0x19
   250  00001A                     	ds	2
   251  00001C                     
   252                           ; 3 bytes @ 0x1B
   253  00001C                     	ds	3
   254  00001F                     ??_main:
   255                           
   256                           ; 0 bytes @ 0x1E
   257  00001F                     	ds	3
   258  000022                     main@valorad_ascii:
   259                           	opt stack 0
   260                           
   261                           ; 5 bytes @ 0x21
   262  000022                     	ds	5
   263  000027                     main@valorad_int:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x26
   267  000027                     	ds	2
   268  000029                     main@dado:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x28
   272  000029                     	ds	1
   273                           tblptru	equ	0xFF8
   274                           tblptrh	equ	0xFF7
   275                           
   276 ;;
   277 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   278 ;;
   279 ;; *************** function _main *****************
   280 ;; Defined at:
   281 ;;		line 13 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;  argc            2   25[COMRAM] int 
   284 ;;  argv            3   27[COMRAM] PTR PTR unsigned char 
   285 ;; Auto vars:     Size  Location     Type
   286 ;;  valorad_asci    5   33[COMRAM] unsigned char [5]
   287 ;;  valorad_int     2   38[COMRAM] int 
   288 ;;  dado            1   40[COMRAM] unsigned char 
   289 ;; Return value:  Size  Location     Type
   290 ;;		None               void
   291 ;; Registers used:
   292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   293 ;; Tracked objects:
   294 ;;		On entry : 0/0
   295 ;;		On exit  : 0/0
   296 ;;		Unchanged: 0/0
   297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   298 ;;      Params:         5       0       0       0       0       0       0       0       0
   299 ;;      Locals:         8       0       0       0       0       0       0       0       0
   300 ;;      Temps:          3       0       0       0       0       0       0       0       0
   301 ;;      Totals:        16       0       0       0       0       0       0       0       0
   302 ;;Total ram usage:       16 bytes
   303 ;; Hardware stack levels required when called:    3
   304 ;; This function calls:
   305 ;;		_OpenUSART
   306 ;;		_Delay1Second
   307 ;;		_ReadUSART
   308 ;;		_putrsUSART
   309 ;;		_WriteUSART
   310 ;;		_OpenADC
   311 ;;		_SetChanADC
   312 ;;		_ConvertADC
   313 ;;		_BusyADC
   314 ;;		_ReadADC
   315 ;;		_itoa
   316 ;;		_putsUSART
   317 ;; This function is called by:
   318 ;;		Startup code after reset
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text0
   323  007ECC                     __ptext0:
   324                           	opt stack 0
   325  007ECC                     _main:
   326                           	opt stack 28
   327                           
   328                           ;main.c: 14: char dado;
   329                           ;main.c: 15: int valorad_int = 0;
   330                           
   331                           ;incstack = 0
   332                           ;incstack = 0
   333  007ECC  0E00               	movlw	0
   334  007ECE  6E28               	movwf	main@valorad_int+1,c
   335  007ED0  0E00               	movlw	0
   336  007ED2  6E27               	movwf	main@valorad_int,c
   337                           
   338                           ;main.c: 16: char valorad_ascii[5];
   339                           ;main.c: 18: TRISBbits.RB7 = 0;
   340  007ED4  9E93               	bcf	3987,7,c	;volatile
   341                           
   342                           ;main.c: 19: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 &
   343                           ;main.c: 20: 0b11111101 & 0b11111111 & 0b11101111, 77);
   344  007ED6  6E1F               	movwf	??_main& (0+255),c
   345  007ED8  0E2C               	movlw	44
   346  007EDA  6E01               	movwf	?_OpenUSART,c
   347  007EDC  501F               	movf	??_main& (0+255),w,c
   348  007EDE  0E00               	movlw	0
   349  007EE0  6E03               	movwf	?_OpenUSART+2,c
   350  007EE2  0E4D               	movlw	77
   351  007EE4  6E02               	movwf	?_OpenUSART+1,c
   352  007EE6  ECB8  F03E         	call	_OpenUSART	;wreg free
   353                           
   354                           ;main.c: 22: PORTBbits.RB7 =1;
   355  007EEA  8E81               	bsf	3969,7,c	;volatile
   356                           
   357                           ;main.c: 23: Delay1Second();
   358  007EEC  EC1B  F03E         	call	_Delay1Second	;wreg free
   359                           
   360                           ;main.c: 24: PORTBbits.RB7 =0;
   361  007EF0  9E81               	bcf	3969,7,c	;volatile
   362                           
   363                           ;main.c: 25: Delay1Second();
   364  007EF2  EC1B  F03E         	call	_Delay1Second	;wreg free
   365                           
   366                           ;main.c: 26: PORTBbits.RB7 =1;
   367  007EF6  8E81               	bsf	3969,7,c	;volatile
   368                           
   369                           ;main.c: 27: Delay1Second();
   370  007EF8  EC1B  F03E         	call	_Delay1Second	;wreg free
   371                           
   372                           ;main.c: 28: PORTBbits.RB7 =0;
   373  007EFC  9E81               	bcf	3969,7,c	;volatile
   374                           
   375                           ;main.c: 29: Delay1Second();
   376  007EFE  EC1B  F03E         	call	_Delay1Second	;wreg free
   377  007F02                     l1023:
   378                           
   379                           ;main.c: 32: {
   380                           ;main.c: 34: if ((PIR1bits.RCIF))
   381  007F02  AA9E               	btfss	3998,5,c	;volatile
   382  007F04  D7FE               	goto	l1023
   383                           
   384                           ;main.c: 35: {
   385                           ;main.c: 36: dado = ReadUSART();
   386  007F06  ECF8  F03D         	call	_ReadUSART	;wreg free
   387  007F0A  6E29               	movwf	main@dado,c
   388                           
   389                           ;main.c: 37: if (dado == 'l')
   390  007F0C  5029               	movf	main@dado,w,c
   391  007F0E  0A6C               	xorlw	108
   392  007F10  A4D8               	btfss	status,2,c
   393  007F12  D013               	goto	l1037
   394                           
   395                           ;main.c: 38: {
   396                           ;main.c: 39: putrsUSART( "ligou" );
   397  007F14  0E08               	movlw	high (STR_2+3)
   398  007F16  6E03               	movwf	?_putrsUSART+1,c
   399  007F18  0E16               	movlw	low (STR_2+3)
   400  007F1A  6E02               	movwf	?_putrsUSART,c
   401  007F1C  EC32  F03E         	call	_putrsUSART	;wreg free
   402                           
   403                           ;main.c: 40: WriteUSART('\r');
   404  007F20  6E1F               	movwf	??_main& (0+255),c
   405  007F22  0E0D               	movlw	13
   406  007F24  6E01               	movwf	?_WriteUSART,c
   407  007F26  501F               	movf	??_main& (0+255),w,c
   408  007F28  ECDC  F03D         	call	_WriteUSART	;wreg free
   409                           
   410                           ;main.c: 41: WriteUSART('\n');
   411  007F2C  6E1F               	movwf	??_main& (0+255),c
   412  007F2E  0E0A               	movlw	10
   413  007F30  6E01               	movwf	?_WriteUSART,c
   414  007F32  501F               	movf	??_main& (0+255),w,c
   415  007F34  ECDC  F03D         	call	_WriteUSART	;wreg free
   416                           
   417                           ;main.c: 42: PORTBbits.RB7 =1;
   418  007F38  8E81               	bsf	3969,7,c	;volatile
   419  007F3A                     l1037:
   420                           
   421                           ;main.c: 43: }
   422                           ;main.c: 44: if (dado == 'd')
   423  007F3A  5029               	movf	main@dado,w,c
   424  007F3C  0A64               	xorlw	100
   425  007F3E  A4D8               	btfss	status,2,c
   426  007F40  D013               	goto	l1047
   427                           
   428                           ;main.c: 45: {
   429                           ;main.c: 46: putrsUSART( "desligou" );
   430  007F42  0E08               	movlw	high STR_2
   431  007F44  6E03               	movwf	?_putrsUSART+1,c
   432  007F46  0E13               	movlw	low STR_2
   433  007F48  6E02               	movwf	?_putrsUSART,c
   434  007F4A  EC32  F03E         	call	_putrsUSART	;wreg free
   435                           
   436                           ;main.c: 47: PORTBbits.RB7 =0;
   437  007F4E  9E81               	bcf	3969,7,c	;volatile
   438                           
   439                           ;main.c: 48: WriteUSART('\r');
   440  007F50  6E1F               	movwf	??_main& (0+255),c
   441  007F52  0E0D               	movlw	13
   442  007F54  6E01               	movwf	?_WriteUSART,c
   443  007F56  501F               	movf	??_main& (0+255),w,c
   444  007F58  ECDC  F03D         	call	_WriteUSART	;wreg free
   445                           
   446                           ;main.c: 49: WriteUSART('\n');
   447  007F5C  6E1F               	movwf	??_main& (0+255),c
   448  007F5E  0E0A               	movlw	10
   449  007F60  6E01               	movwf	?_WriteUSART,c
   450  007F62  501F               	movf	??_main& (0+255),w,c
   451  007F64  ECDC  F03D         	call	_WriteUSART	;wreg free
   452  007F68                     l1047:
   453                           
   454                           ;main.c: 50: }
   455                           ;main.c: 51: if (dado == 'a')
   456  007F68  5029               	movf	main@dado,w,c
   457  007F6A  0A61               	xorlw	97
   458  007F6C  A4D8               	btfss	status,2,c
   459  007F6E  D7C9               	goto	l1023
   460                           
   461                           ;main.c: 52: {
   462                           ;main.c: 53: OpenADC(0b10011111 & 0b11111111 & 0b11110001,
   463                           ;main.c: 54: 0b10000111 & 0b01111111 & 0b11111110 & 0b11111101,
   464                           ;main.c: 55: 0b11110101);
   465  007F70  6E1F               	movwf	??_main& (0+255),c
   466  007F72  0E91               	movlw	145
   467  007F74  6E01               	movwf	?_OpenADC,c
   468  007F76  501F               	movf	??_main& (0+255),w,c
   469  007F78  6E20               	movwf	(??_main+1)& (0+255),c
   470  007F7A  0E04               	movlw	4
   471  007F7C  6E02               	movwf	?_OpenADC+1,c
   472  007F7E  5020               	movf	(??_main+1)& (0+255),w,c
   473  007F80  6E21               	movwf	(??_main+2)& (0+255),c
   474  007F82  0EF5               	movlw	245
   475  007F84  6E03               	movwf	?_OpenADC+2,c
   476  007F86  5021               	movf	(??_main+2)& (0+255),w,c
   477  007F88  ECE6  F03E         	call	_OpenADC	;wreg free
   478                           
   479                           ;main.c: 56: SetChanADC(0b10010111);
   480  007F8C  6E1F               	movwf	??_main& (0+255),c
   481  007F8E  0E97               	movlw	151
   482  007F90  6E01               	movwf	?_SetChanADC,c
   483  007F92  501F               	movf	??_main& (0+255),w,c
   484  007F94  ECE4  F03D         	call	_SetChanADC	;wreg free
   485                           
   486                           ;main.c: 58: ConvertADC();
   487  007F98  ECD2  F03D         	call	_ConvertADC	;wreg free
   488  007F9C                     l1053:
   489  007F9C  ECD4  F03D         	call	_BusyADC	;wreg free
   490  007FA0  0900               	iorlw	0
   491  007FA2  A4D8               	btfss	status,2,c
   492  007FA4  D7FB               	goto	l1053
   493                           
   494                           ;main.c: 60: valorad_int = ReadADC();
   495  007FA6  ECD7  F03D         	call	_ReadADC	;wreg free
   496  007FAA  C001  F027         	movff	?_ReadADC,main@valorad_int
   497  007FAE  C002  F028         	movff	?_ReadADC+1,main@valorad_int+1
   498                           
   499                           ;main.c: 61: itoa(valorad_ascii,valorad_int,10 );
   500  007FB2  0E00               	movlw	high main@valorad_ascii
   501  007FB4  6E13               	movwf	?_itoa+1,c
   502  007FB6  0E22               	movlw	low main@valorad_ascii
   503  007FB8  6E12               	movwf	?_itoa,c
   504  007FBA  C027  F014         	movff	main@valorad_int,?_itoa+2
   505  007FBE  C028  F015         	movff	main@valorad_int+1,?_itoa+3
   506  007FC2  0E00               	movlw	0
   507  007FC4  6E17               	movwf	?_itoa+5,c
   508  007FC6  0E0A               	movlw	10
   509  007FC8  6E16               	movwf	?_itoa+4,c
   510  007FCA  EC49  F03E         	call	_itoa	;wreg free
   511                           
   512                           ;main.c: 62: putrsUSART( "Valor AD: " );
   513  007FCE  0E08               	movlw	high STR_3
   514  007FD0  6E03               	movwf	?_putrsUSART+1,c
   515  007FD2  0E08               	movlw	low STR_3
   516  007FD4  6E02               	movwf	?_putrsUSART,c
   517  007FD6  EC32  F03E         	call	_putrsUSART	;wreg free
   518                           
   519                           ;main.c: 63: putsUSART( valorad_ascii );
   520  007FDA  0E00               	movlw	high main@valorad_ascii
   521  007FDC  6E03               	movwf	?_putsUSART+1,c
   522  007FDE  0E22               	movlw	low main@valorad_ascii
   523  007FE0  6E02               	movwf	?_putsUSART,c
   524  007FE2  EC07  F03E         	call	_putsUSART	;wreg free
   525                           
   526                           ;main.c: 64: WriteUSART('\r');
   527  007FE6  6E1F               	movwf	??_main& (0+255),c
   528  007FE8  0E0D               	movlw	13
   529  007FEA  6E01               	movwf	?_WriteUSART,c
   530  007FEC  501F               	movf	??_main& (0+255),w,c
   531  007FEE  ECDC  F03D         	call	_WriteUSART	;wreg free
   532                           
   533                           ;main.c: 65: WriteUSART('\n');
   534  007FF2  6E1F               	movwf	??_main& (0+255),c
   535  007FF4  0E0A               	movlw	10
   536  007FF6  6E01               	movwf	?_WriteUSART,c
   537  007FF8  501F               	movf	??_main& (0+255),w,c
   538  007FFA  ECDC  F03D         	call	_WriteUSART	;wreg free
   539  007FFE  D781               	goto	l1023
   540  008000                     __end_of_main:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           status	equ	0xFD8
   545                           
   546 ;; *************** function _putsUSART *****************
   547 ;; Defined at:
   548 ;;		line 15 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputs.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;  data            2    1[COMRAM] PTR unsigned char 
   551 ;;		 -> main@valorad_ascii(5), 
   552 ;; Auto vars:     Size  Location     Type
   553 ;;		None
   554 ;; Return value:  Size  Location     Type
   555 ;;		None               void
   556 ;; Registers used:
   557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   563 ;;      Params:         2       0       0       0       0       0       0       0       0
   564 ;;      Locals:         0       0       0       0       0       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0       0       0       0       0
   566 ;;      Totals:         2       0       0       0       0       0       0       0       0
   567 ;;Total ram usage:        2 bytes
   568 ;; Hardware stack levels used:    1
   569 ;; Hardware stack levels required when called:    1
   570 ;; This function calls:
   571 ;;		_WriteUSART
   572 ;; This function is called by:
   573 ;;		_main
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text1
   578  007C0E                     __ptext1:
   579                           	opt stack 0
   580  007C0E                     _putsUSART:
   581                           	opt stack 29
   582  007C0E                     l145:
   583  007C0E  A2AC               	btfss	4012,1,c	;volatile
   584  007C10  D7FE               	goto	l145
   585  007C12  C002  FFD9         	movff	putsUSART@data,fsr2l
   586  007C16  C003  FFDA         	movff	putsUSART@data+1,fsr2h
   587  007C1A  50DF               	movf	indf2,w,c
   588  007C1C  6E01               	movwf	?_WriteUSART,c
   589  007C1E  ECDC  F03D         	call	_WriteUSART	;wreg free
   590  007C22  C002  FFD9         	movff	putsUSART@data,fsr2l
   591  007C26  C003  FFDA         	movff	putsUSART@data+1,fsr2h
   592  007C2A  4A02               	infsnz	putsUSART@data,f,c
   593  007C2C  2A03               	incf	putsUSART@data+1,f,c
   594  007C2E  50DF               	movf	indf2,w,c
   595  007C30  B4D8               	btfsc	status,2,c
   596  007C32  0012               	return	
   597  007C34  D7EC               	goto	l145
   598  007C36                     __end_of_putsUSART:
   599                           	opt stack 0
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           indf2	equ	0xFDF
   603                           fsr2h	equ	0xFDA
   604                           fsr2l	equ	0xFD9
   605                           status	equ	0xFD8
   606                           
   607 ;; *************** function _itoa *****************
   608 ;; Defined at:
   609 ;;		line 5 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\common\itoa.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  buf             2   17[COMRAM] PTR unsigned char 
   612 ;;		 -> main@valorad_ascii(5), 
   613 ;;  val             2   19[COMRAM] int 
   614 ;;  base            2   21[COMRAM] int 
   615 ;; Auto vars:     Size  Location     Type
   616 ;;  cp              2   23[COMRAM] PTR unsigned char 
   617 ;;		 -> main@valorad_ascii(5), 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  2   17[COMRAM] PTR unsigned char 
   620 ;; Registers used:
   621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   627 ;;      Params:         6       0       0       0       0       0       0       0       0
   628 ;;      Locals:         2       0       0       0       0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0
   630 ;;      Totals:         8       0       0       0       0       0       0       0       0
   631 ;;Total ram usage:        8 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    2
   634 ;; This function calls:
   635 ;;		_utoa
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text2
   642  007C92                     __ptext2:
   643                           	opt stack 0
   644  007C92                     _itoa:
   645                           	opt stack 28
   646                           
   647                           ;incstack = 0
   648                           ;incstack = 0
   649  007C92  C012  F018         	movff	itoa@buf,itoa@cp
   650  007C96  C013  F019         	movff	itoa@buf+1,itoa@cp+1
   651  007C9A  AE15               	btfss	itoa@val+1,7,c
   652  007C9C  D00C               	goto	l997
   653  007C9E  C012  FFD9         	movff	itoa@buf,fsr2l
   654  007CA2  C013  FFDA         	movff	itoa@buf+1,fsr2h
   655  007CA6  0E2D               	movlw	45
   656  007CA8  6EDF               	movwf	indf2,c
   657  007CAA  4A12               	infsnz	itoa@buf,f,c
   658  007CAC  2A13               	incf	itoa@buf+1,f,c
   659  007CAE  6C14               	negf	itoa@val,c
   660  007CB0  1E15               	comf	itoa@val+1,f,c
   661  007CB2  B0D8               	btfsc	status,0,c
   662  007CB4  2A15               	incf	itoa@val+1,f,c
   663  007CB6                     l997:
   664  007CB6  C012  F009         	movff	itoa@buf,?_utoa
   665  007CBA  C013  F00A         	movff	itoa@buf+1,?_utoa+1
   666  007CBE  C014  F00B         	movff	itoa@val,?_utoa+2
   667  007CC2  C015  F00C         	movff	itoa@val+1,?_utoa+3
   668  007CC6  C016  F00D         	movff	itoa@base,?_utoa+4
   669  007CCA  C017  F00E         	movff	itoa@base+1,?_utoa+5
   670  007CCE  EC14  F03F         	call	_utoa	;wreg free
   671                           
   672                           ;	Return value of _itoa is never used
   673  007CD2  0012               	return	
   674  007CD4                     __end_of_itoa:
   675                           	opt stack 0
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           indf2	equ	0xFDF
   679                           fsr2h	equ	0xFDA
   680                           fsr2l	equ	0xFD9
   681                           status	equ	0xFD8
   682                           
   683 ;; *************** function _utoa *****************
   684 ;; Defined at:
   685 ;;		line 18 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\common\itoa.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  buf             2    8[COMRAM] PTR unsigned char 
   688 ;;		 -> main@valorad_ascii(5), 
   689 ;;  val             2   10[COMRAM] unsigned int 
   690 ;;  base            2   12[COMRAM] int 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  v               2   14[COMRAM] unsigned int 
   693 ;;  c               1   16[COMRAM] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  2    8[COMRAM] PTR unsigned char 
   696 ;; Registers used:
   697 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   703 ;;      Params:         6       0       0       0       0       0       0       0       0
   704 ;;      Locals:         3       0       0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0
   706 ;;      Totals:         9       0       0       0       0       0       0       0       0
   707 ;;Total ram usage:        9 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    1
   710 ;; This function calls:
   711 ;;		___lwdiv
   712 ;;		___lwmod
   713 ;; This function is called by:
   714 ;;		_itoa
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text3
   719  007E28                     __ptext3:
   720                           	opt stack 0
   721  007E28                     _utoa:
   722                           	opt stack 28
   723                           
   724                           ;incstack = 0
   725                           ;incstack = 0
   726  007E28  C00B  F00F         	movff	utoa@val,utoa@v
   727  007E2C  C00C  F010         	movff	utoa@val+1,utoa@v+1
   728  007E30                     l961:
   729  007E30  C00F  F001         	movff	utoa@v,?___lwdiv
   730  007E34  C010  F002         	movff	utoa@v+1,?___lwdiv+1
   731  007E38  C00D  F003         	movff	utoa@base,?___lwdiv+2
   732  007E3C  C00E  F004         	movff	utoa@base+1,?___lwdiv+3
   733  007E40  EC8D  F03E         	call	___lwdiv	;wreg free
   734  007E44  C001  F00F         	movff	?___lwdiv,utoa@v
   735  007E48  C002  F010         	movff	?___lwdiv+1,utoa@v+1
   736  007E4C  4A09               	infsnz	utoa@buf,f,c
   737  007E4E  2A0A               	incf	utoa@buf+1,f,c
   738  007E50  5010               	movf	utoa@v+1,w,c
   739  007E52  100F               	iorwf	utoa@v,w,c
   740  007E54  A4D8               	btfss	status,2,c
   741  007E56  D7EC               	goto	l961
   742  007E58  C009  FFD9         	movff	utoa@buf,fsr2l
   743  007E5C  C00A  FFDA         	movff	utoa@buf+1,fsr2h
   744  007E60  0E00               	movlw	0
   745  007E62  6EDF               	movwf	indf2,c
   746  007E64  0609               	decf	utoa@buf,f,c
   747  007E66  A0D8               	btfss	status,0,c
   748  007E68  060A               	decf	utoa@buf+1,f,c
   749  007E6A                     l971:
   750  007E6A  C00B  F001         	movff	utoa@val,?___lwmod
   751  007E6E  C00C  F002         	movff	utoa@val+1,?___lwmod+1
   752  007E72  C00D  F003         	movff	utoa@base,?___lwmod+2
   753  007E76  C00E  F004         	movff	utoa@base+1,?___lwmod+3
   754  007E7A  EC6A  F03E         	call	___lwmod	;wreg free
   755  007E7E  5001               	movf	?___lwmod,w,c
   756  007E80  6E11               	movwf	utoa@c,c
   757  007E82  C00B  F001         	movff	utoa@val,?___lwdiv
   758  007E86  C00C  F002         	movff	utoa@val+1,?___lwdiv+1
   759  007E8A  C00D  F003         	movff	utoa@base,?___lwdiv+2
   760  007E8E  C00E  F004         	movff	utoa@base+1,?___lwdiv+3
   761  007E92  EC8D  F03E         	call	___lwdiv	;wreg free
   762  007E96  C001  F00B         	movff	?___lwdiv,utoa@val
   763  007E9A  C002  F00C         	movff	?___lwdiv+1,utoa@val+1
   764  007E9E  0E09               	movlw	9
   765  007EA0  6411               	cpfsgt	utoa@c,c
   766  007EA2  D002               	goto	l593
   767  007EA4  0E07               	movlw	7
   768  007EA6  2611               	addwf	utoa@c,f,c
   769  007EA8                     l593:
   770  007EA8  0E30               	movlw	48
   771  007EAA  2611               	addwf	utoa@c,f,c
   772  007EAC  C009  FFD9         	movff	utoa@buf,fsr2l
   773  007EB0  C00A  FFDA         	movff	utoa@buf+1,fsr2h
   774  007EB4  C011  FFDF         	movff	utoa@c,indf2
   775  007EB8  0609               	decf	utoa@buf,f,c
   776  007EBA  A0D8               	btfss	status,0,c
   777  007EBC  060A               	decf	utoa@buf+1,f,c
   778  007EBE  500C               	movf	utoa@val+1,w,c
   779  007EC0  100B               	iorwf	utoa@val,w,c
   780  007EC2  A4D8               	btfss	status,2,c
   781  007EC4  D7D2               	goto	l971
   782                           
   783                           ;	Return value of _utoa is never used
   784  007EC6  4A09               	infsnz	utoa@buf,f,c
   785  007EC8  2A0A               	incf	utoa@buf+1,f,c
   786  007ECA  0012               	return	
   787  007ECC                     __end_of_utoa:
   788                           	opt stack 0
   789                           tblptru	equ	0xFF8
   790                           tblptrh	equ	0xFF7
   791                           indf2	equ	0xFDF
   792                           fsr2h	equ	0xFDA
   793                           fsr2l	equ	0xFD9
   794                           status	equ	0xFD8
   795                           
   796 ;; *************** function ___lwmod *****************
   797 ;; Defined at:
   798 ;;		line 10 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\common\lwmod.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  dividend        2    0[COMRAM] unsigned int 
   801 ;;  divisor         2    2[COMRAM] unsigned int 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  counter         1    5[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2    0[COMRAM] unsigned int 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   813 ;;      Params:         4       0       0       0       0       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0       0       0       0       0
   815 ;;      Temps:          1       0       0       0       0       0       0       0       0
   816 ;;      Totals:         6       0       0       0       0       0       0       0       0
   817 ;;Total ram usage:        6 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; This function calls:
   820 ;;		Nothing
   821 ;; This function is called by:
   822 ;;		_utoa
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text4
   827  007CD4                     __ptext4:
   828                           	opt stack 0
   829  007CD4                     ___lwmod:
   830                           	opt stack 28
   831                           
   832                           ;incstack = 0
   833                           ;incstack = 0
   834  007CD4  5004               	movf	___lwmod@divisor+1,w,c
   835  007CD6  1003               	iorwf	___lwmod@divisor,w,c
   836  007CD8  B4D8               	btfsc	status,2,c
   837  007CDA  D01A               	goto	l703
   838  007CDC  6E05               	movwf	??___lwmod& (0+255),c
   839  007CDE  0E01               	movlw	1
   840  007CE0  6E06               	movwf	___lwmod@counter,c
   841  007CE2  5005               	movf	??___lwmod& (0+255),w,c
   842  007CE4  D004               	goto	l931
   843  007CE6                     l929:
   844  007CE6  90D8               	bcf	status,0,c
   845  007CE8  3603               	rlcf	___lwmod@divisor,f,c
   846  007CEA  3604               	rlcf	___lwmod@divisor+1,f,c
   847  007CEC  2A06               	incf	___lwmod@counter,f,c
   848  007CEE                     l931:
   849  007CEE  AE04               	btfss	___lwmod@divisor+1,7,c
   850  007CF0  D7FA               	goto	l929
   851  007CF2                     l933:
   852  007CF2  5003               	movf	___lwmod@divisor,w,c
   853  007CF4  5C01               	subwf	___lwmod@dividend,w,c
   854  007CF6  5004               	movf	___lwmod@divisor+1,w,c
   855  007CF8  5802               	subwfb	___lwmod@dividend+1,w,c
   856  007CFA  A0D8               	btfss	status,0,c
   857  007CFC  D004               	goto	l937
   858  007CFE  5003               	movf	___lwmod@divisor,w,c
   859  007D00  5E01               	subwf	___lwmod@dividend,f,c
   860  007D02  5004               	movf	___lwmod@divisor+1,w,c
   861  007D04  5A02               	subwfb	___lwmod@dividend+1,f,c
   862  007D06                     l937:
   863  007D06  90D8               	bcf	status,0,c
   864  007D08  3204               	rrcf	___lwmod@divisor+1,f,c
   865  007D0A  3203               	rrcf	___lwmod@divisor,f,c
   866  007D0C  2E06               	decfsz	___lwmod@counter,f,c
   867  007D0E  D7F1               	goto	l933
   868  007D10                     l703:
   869  007D10  C001  F001         	movff	___lwmod@dividend,?___lwmod
   870  007D14  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
   871  007D18  0012               	return	
   872  007D1A                     __end_of___lwmod:
   873                           	opt stack 0
   874                           tblptru	equ	0xFF8
   875                           tblptrh	equ	0xFF7
   876                           indf2	equ	0xFDF
   877                           fsr2h	equ	0xFDA
   878                           fsr2l	equ	0xFD9
   879                           status	equ	0xFD8
   880                           
   881 ;; *************** function ___lwdiv *****************
   882 ;; Defined at:
   883 ;;		line 10 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\common\lwdiv.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  dividend        2    0[COMRAM] unsigned int 
   886 ;;  divisor         2    2[COMRAM] unsigned int 
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  quotient        2    5[COMRAM] unsigned int 
   889 ;;  counter         1    7[COMRAM] unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  2    0[COMRAM] unsigned int 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   899 ;;      Params:         4       0       0       0       0       0       0       0       0
   900 ;;      Locals:         3       0       0       0       0       0       0       0       0
   901 ;;      Temps:          1       0       0       0       0       0       0       0       0
   902 ;;      Totals:         8       0       0       0       0       0       0       0       0
   903 ;;Total ram usage:        8 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_utoa
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text5
   913  007D1A                     __ptext5:
   914                           	opt stack 0
   915  007D1A                     ___lwdiv:
   916                           	opt stack 28
   917                           
   918                           ;incstack = 0
   919                           ;incstack = 0
   920  007D1A  0E00               	movlw	0
   921  007D1C  6E07               	movwf	___lwdiv@quotient+1,c
   922  007D1E  0E00               	movlw	0
   923  007D20  6E06               	movwf	___lwdiv@quotient,c
   924  007D22  5004               	movf	___lwdiv@divisor+1,w,c
   925  007D24  1003               	iorwf	___lwdiv@divisor,w,c
   926  007D26  B4D8               	btfsc	status,2,c
   927  007D28  D01E               	goto	l693
   928  007D2A  6E05               	movwf	??___lwdiv& (0+255),c
   929  007D2C  0E01               	movlw	1
   930  007D2E  6E08               	movwf	___lwdiv@counter,c
   931  007D30  5005               	movf	??___lwdiv& (0+255),w,c
   932  007D32  D004               	goto	l911
   933  007D34                     l909:
   934  007D34  90D8               	bcf	status,0,c
   935  007D36  3603               	rlcf	___lwdiv@divisor,f,c
   936  007D38  3604               	rlcf	___lwdiv@divisor+1,f,c
   937  007D3A  2A08               	incf	___lwdiv@counter,f,c
   938  007D3C                     l911:
   939  007D3C  AE04               	btfss	___lwdiv@divisor+1,7,c
   940  007D3E  D7FA               	goto	l909
   941  007D40                     l913:
   942  007D40  90D8               	bcf	status,0,c
   943  007D42  3606               	rlcf	___lwdiv@quotient,f,c
   944  007D44  3607               	rlcf	___lwdiv@quotient+1,f,c
   945  007D46  5003               	movf	___lwdiv@divisor,w,c
   946  007D48  5C01               	subwf	___lwdiv@dividend,w,c
   947  007D4A  5004               	movf	___lwdiv@divisor+1,w,c
   948  007D4C  5802               	subwfb	___lwdiv@dividend+1,w,c
   949  007D4E  A0D8               	btfss	status,0,c
   950  007D50  D005               	goto	l921
   951  007D52  5003               	movf	___lwdiv@divisor,w,c
   952  007D54  5E01               	subwf	___lwdiv@dividend,f,c
   953  007D56  5004               	movf	___lwdiv@divisor+1,w,c
   954  007D58  5A02               	subwfb	___lwdiv@dividend+1,f,c
   955  007D5A  8006               	bsf	___lwdiv@quotient,0,c
   956  007D5C                     l921:
   957  007D5C  90D8               	bcf	status,0,c
   958  007D5E  3204               	rrcf	___lwdiv@divisor+1,f,c
   959  007D60  3203               	rrcf	___lwdiv@divisor,f,c
   960  007D62  2E08               	decfsz	___lwdiv@counter,f,c
   961  007D64  D7ED               	goto	l913
   962  007D66                     l693:
   963  007D66  C006  F001         	movff	___lwdiv@quotient,?___lwdiv
   964  007D6A  C007  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
   965  007D6E  0012               	return	
   966  007D70                     __end_of___lwdiv:
   967                           	opt stack 0
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           indf2	equ	0xFDF
   971                           fsr2h	equ	0xFDA
   972                           fsr2l	equ	0xFD9
   973                           status	equ	0xFD8
   974                           
   975 ;; *************** function _ReadADC *****************
   976 ;; Defined at:
   977 ;;		line 25 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcread.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2    0[COMRAM] int 
   984 ;; Registers used:
   985 ;;		wreg, status,2
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         2       0       0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0       0       0       0       0
   994 ;;      Totals:         2       0       0       0       0       0       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text6
  1005  007BAE                     __ptext6:
  1006                           	opt stack 0
  1007  007BAE                     _ReadADC:
  1008                           	opt stack 30
  1009                           
  1010                           ;incstack = 0
  1011                           ;incstack = 0
  1012  007BAE  50C4               	movf	4036,w,c	;volatile
  1013  007BB0  6E02               	movwf	?_ReadADC+1,c
  1014  007BB2  50C3               	movf	4035,w,c	;volatile
  1015  007BB4  6E01               	movwf	?_ReadADC,c
  1016  007BB6  0012               	return	
  1017  007BB8                     __end_of_ReadADC:
  1018                           	opt stack 0
  1019                           tblptru	equ	0xFF8
  1020                           tblptrh	equ	0xFF7
  1021                           indf2	equ	0xFDF
  1022                           fsr2h	equ	0xFDA
  1023                           fsr2l	equ	0xFD9
  1024                           status	equ	0xFD8
  1025                           
  1026 ;; *************** function _BusyADC *****************
  1027 ;; Defined at:
  1028 ;;		line 27 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcbusy.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      unsigned char 
  1035 ;; Registers used:
  1036 ;;		wreg, status,2, status,0
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1045 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels used:    1
  1048 ;; This function calls:
  1049 ;;		Nothing
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text7
  1056  007BA8                     __ptext7:
  1057                           	opt stack 0
  1058  007BA8                     _BusyADC:
  1059                           	opt stack 30
  1060                           
  1061                           ;incstack = 0
  1062                           ;incstack = 0
  1063  007BA8  30C2               	rrcf	4034,w,c	;volatile
  1064  007BAA  0B01               	andlw	1
  1065  007BAC  0012               	return	
  1066  007BAE                     __end_of_BusyADC:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           indf2	equ	0xFDF
  1071                           fsr2h	equ	0xFDA
  1072                           fsr2l	equ	0xFD9
  1073                           status	equ	0xFD8
  1074                           
  1075 ;; *************** function _ConvertADC *****************
  1076 ;; Defined at:
  1077 ;;		line 23 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcconv.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;		None               void
  1084 ;; Registers used:
  1085 ;;		None
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       0       0       0       0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text8
  1105  007BA4                     __ptext8:
  1106                           	opt stack 0
  1107  007BA4                     _ConvertADC:
  1108                           	opt stack 30
  1109                           
  1110                           ;incstack = 0
  1111                           ;incstack = 0
  1112  007BA4  82C2               	bsf	4034,1,c	;volatile
  1113  007BA6  0012               	return	
  1114  007BA8                     __end_of_ConvertADC:
  1115                           	opt stack 0
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           indf2	equ	0xFDF
  1119                           fsr2h	equ	0xFDA
  1120                           fsr2l	equ	0xFD9
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _SetChanADC *****************
  1124 ;; Defined at:
  1125 ;;		line 31 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcsetch.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  channel         1    0[COMRAM] unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;		None               void
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1139 ;;      Params:         1       0       0       0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1141 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1142 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_main
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text9
  1153  007BC8                     __ptext9:
  1154                           	opt stack 0
  1155  007BC8                     _SetChanADC:
  1156                           	opt stack 30
  1157                           
  1158                           ;incstack = 0
  1159                           ;incstack = 0
  1160  007BC8  CFC2 F002          	movff	4034,??_SetChanADC	;volatile
  1161  007BCC  0EC3               	movlw	195
  1162  007BCE  1602               	andwf	??_SetChanADC,f,c
  1163  007BD0  90D8               	bcf	status,0,c
  1164  007BD2  3001               	rrcf	SetChanADC@channel,w,c
  1165  007BD4  0B3C               	andlw	60
  1166  007BD6  1002               	iorwf	??_SetChanADC,w,c
  1167  007BD8  6EC2               	movwf	4034,c	;volatile
  1168  007BDA  0012               	return	
  1169  007BDC                     __end_of_SetChanADC:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           indf2	equ	0xFDF
  1174                           fsr2h	equ	0xFDA
  1175                           fsr2l	equ	0xFD9
  1176                           status	equ	0xFD8
  1177                           
  1178 ;; *************** function _OpenADC *****************
  1179 ;; Defined at:
  1180 ;;		line 71 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\ADC\adcopen.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;  config          1    0[COMRAM] unsigned char 
  1183 ;;  config2         1    1[COMRAM] unsigned char 
  1184 ;;  portconfig      1    2[COMRAM] unsigned char 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;		None               void
  1189 ;; Registers used:
  1190 ;;		wreg, status,2, status,0
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1196 ;;      Params:         3       0       0       0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1198 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1199 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; This function calls:
  1203 ;;		Nothing
  1204 ;; This function is called by:
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text10
  1210  007DCC                     __ptext10:
  1211                           	opt stack 0
  1212  007DCC                     _OpenADC:
  1213                           	opt stack 30
  1214                           
  1215                           ;incstack = 0
  1216                           ;incstack = 0
  1217  007DCC  0E00               	movlw	0
  1218  007DCE  6EC2               	movwf	4034,c	;volatile
  1219  007DD0  0E00               	movlw	0
  1220  007DD2  6EC0               	movwf	4032,c	;volatile
  1221  007DD4  90D8               	bcf	status,0,c
  1222  007DD6  3002               	rrcf	OpenADC@config2,w,c
  1223  007DD8  0B3C               	andlw	60
  1224  007DDA  6EC2               	movwf	4034,c	;volatile
  1225  007DDC  C002  F004         	movff	OpenADC@config2,??_OpenADC
  1226  007DE0  3A04               	swapf	??_OpenADC,f,c
  1227  007DE2  0EF0               	movlw	240
  1228  007DE4  1604               	andwf	??_OpenADC,f,c
  1229  007DE6  0E30               	movlw	48
  1230  007DE8  1604               	andwf	??_OpenADC,f,c
  1231  007DEA  5003               	movf	OpenADC@portconfig,w,c
  1232  007DEC  0B0F               	andlw	15
  1233  007DEE  1004               	iorwf	??_OpenADC,w,c
  1234  007DF0  6EC1               	movwf	4033,c	;volatile
  1235  007DF2  C001  F004         	movff	OpenADC@config,??_OpenADC
  1236  007DF6  90D8               	bcf	status,0,c
  1237  007DF8  3604               	rlcf	??_OpenADC,f,c
  1238  007DFA  90D8               	bcf	status,0,c
  1239  007DFC  3604               	rlcf	??_OpenADC,f,c
  1240  007DFE  0E38               	movlw	56
  1241  007E00  1604               	andwf	??_OpenADC,f,c
  1242  007E02  C001  F005         	movff	OpenADC@config,??_OpenADC+1
  1243  007E06  3A05               	swapf	??_OpenADC+1,f,c
  1244  007E08  0E0F               	movlw	15
  1245  007E0A  1605               	andwf	??_OpenADC+1,f,c
  1246  007E0C  0E07               	movlw	7
  1247  007E0E  1605               	andwf	??_OpenADC+1,f,c
  1248  007E10  5001               	movf	OpenADC@config,w,c
  1249  007E12  0B80               	andlw	128
  1250  007E14  1005               	iorwf	??_OpenADC+1,w,c
  1251  007E16  1004               	iorwf	??_OpenADC,w,c
  1252  007E18  6EC0               	movwf	4032,c	;volatile
  1253  007E1A  AE02               	btfss	OpenADC@config2,7,c
  1254  007E1C  D003               	goto	l79
  1255  007E1E  9C9E               	bcf	3998,6,c	;volatile
  1256  007E20  8C9D               	bsf	3997,6,c	;volatile
  1257  007E22  8CF2               	bsf	intcon,6,c	;volatile
  1258  007E24                     l79:
  1259  007E24  80C2               	bsf	4034,0,c	;volatile
  1260  007E26  0012               	return	
  1261  007E28                     __end_of_OpenADC:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           intcon	equ	0xFF2
  1266                           indf2	equ	0xFDF
  1267                           fsr2h	equ	0xFDA
  1268                           fsr2l	equ	0xFD9
  1269                           status	equ	0xFD8
  1270                           
  1271 ;; *************** function _putrsUSART *****************
  1272 ;; Defined at:
  1273 ;;		line 14 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\USART\uputrs.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  data            2    1[COMRAM] PTR const unsigned char 
  1276 ;;		 -> STR_3(11), STR_2(9), STR_1(6), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;		None               void
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1288 ;;      Params:         2       0       0       0       0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1291 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    1
  1295 ;; This function calls:
  1296 ;;		_WriteUSART
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text11
  1303  007C64                     __ptext11:
  1304                           	opt stack 0
  1305  007C64                     _putrsUSART:
  1306                           	opt stack 29
  1307  007C64                     l133:
  1308  007C64  A2AC               	btfss	4012,1,c	;volatile
  1309  007C66  D7FE               	goto	l133
  1310  007C68  C002  FFF6         	movff	putrsUSART@data,tblptrl
  1311  007C6C  C003  FFF7         	movff	putrsUSART@data+1,tblptrh
  1312  007C70  0008               	tblrd		*
  1313  007C72  CFF5 F001          	movff	tablat,?_WriteUSART
  1314  007C76  ECDC  F03D         	call	_WriteUSART	;wreg free
  1315  007C7A  C002  FFF6         	movff	putrsUSART@data,tblptrl
  1316  007C7E  C003  FFF7         	movff	putrsUSART@data+1,tblptrh
  1317  007C82  4A02               	infsnz	putrsUSART@data,f,c
  1318  007C84  2A03               	incf	putrsUSART@data+1,f,c
  1319  007C86  0008               	tblrd		*
  1320  007C88  50F5               	movf	tablat,w,c
  1321  007C8A  0900               	iorlw	0
  1322  007C8C  B4D8               	btfsc	status,2,c
  1323  007C8E  0012               	return	
  1324  007C90  D7E9               	goto	l133
  1325  007C92                     __end_of_putrsUSART:
  1326                           	opt stack 0
  1327                           tblptru	equ	0xFF8
  1328                           tblptrh	equ	0xFF7
  1329                           tblptrl	equ	0xFF6
  1330                           tablat	equ	0xFF5
  1331                           intcon	equ	0xFF2
  1332                           indf2	equ	0xFDF
  1333                           fsr2h	equ	0xFDA
  1334                           fsr2l	equ	0xFD9
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function _WriteUSART *****************
  1338 ;; Defined at:
  1339 ;;		line 14 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\USART\uwrite.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  data            1    0[COMRAM] unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;		None               void
  1346 ;; Registers used:
  1347 ;;		None
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1353 ;;      Params:         1       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;;		_putrsUSART
  1364 ;;		_putsUSART
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text12
  1369  007BB8                     __ptext12:
  1370                           	opt stack 0
  1371  007BB8                     _WriteUSART:
  1372                           	opt stack 29
  1373                           
  1374                           ;incstack = 0
  1375                           ;incstack = 0
  1376  007BB8  ACAC               	btfss	4012,6,c	;volatile
  1377  007BBA  D003               	goto	l171
  1378  007BBC  90AC               	bcf	4012,0,c	;volatile
  1379  007BBE  B22C               	btfsc	_USART_Status,1,c
  1380  007BC0  80AC               	bsf	4012,0,c	;volatile
  1381  007BC2                     l171:
  1382  007BC2  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  1383  007BC6  0012               	return	
  1384  007BC8                     __end_of_WriteUSART:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           intcon	equ	0xFF2
  1391                           indf2	equ	0xFDF
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _ReadUSART *****************
  1397 ;; Defined at:
  1398 ;;		line 16 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\USART\uread.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  data            1    0[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1415 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text13
  1426  007BF0                     __ptext13:
  1427                           	opt stack 0
  1428  007BF0                     _ReadUSART:
  1429                           	opt stack 30
  1430                           
  1431                           ;incstack = 0
  1432                           ;incstack = 0
  1433  007BF0  0EF2               	movlw	242
  1434  007BF2  162C               	andwf	_USART_Status,f,c
  1435  007BF4  ACAB               	btfss	4011,6,c	;volatile
  1436  007BF6  D003               	goto	l158
  1437  007BF8  902C               	bcf	_USART_Status,0,c
  1438  007BFA  B0AB               	btfsc	4011,0,c	;volatile
  1439  007BFC  802C               	bsf	_USART_Status,0,c
  1440  007BFE                     l158:
  1441  007BFE  B4AB               	btfsc	4011,2,c	;volatile
  1442  007C00  842C               	bsf	_USART_Status,2,c
  1443  007C02  B2AB               	btfsc	4011,1,c	;volatile
  1444  007C04  862C               	bsf	_USART_Status,3,c
  1445  007C06  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  1446  007C0A  5001               	movf	ReadUSART@data,w,c
  1447  007C0C  0012               	return	
  1448  007C0E                     __end_of_ReadUSART:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           tblptrh	equ	0xFF7
  1452                           tblptrl	equ	0xFF6
  1453                           tablat	equ	0xFF5
  1454                           intcon	equ	0xFF2
  1455                           indf2	equ	0xFDF
  1456                           fsr2h	equ	0xFDA
  1457                           fsr2l	equ	0xFD9
  1458                           status	equ	0xFD8
  1459                           
  1460 ;; *************** function _Delay1Second *****************
  1461 ;; Defined at:
  1462 ;;		line 84 in file "main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;		None               void
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text14
  1490  007C36                     __ptext14:
  1491                           	opt stack 0
  1492  007C36                     _Delay1Second:
  1493                           	opt stack 30
  1494                           
  1495                           ;main.c: 85: for(i=0;i<100;i++)
  1496                           
  1497                           ;incstack = 0
  1498                           ;incstack = 0
  1499  007C36  0E00               	movlw	0
  1500  007C38  6E2B               	movwf	_i+1,c
  1501  007C3A  0E00               	movlw	0
  1502  007C3C  6E2A               	movwf	_i,c
  1503  007C3E  502B               	movf	_i+1,w,c
  1504  007C40  0A80               	xorlw	128
  1505  007C42  0F80               	addlw	-128
  1506  007C44  0E64               	movlw	100
  1507  007C46  B4D8               	btfsc	status,2,c
  1508  007C48  5C2A               	subwf	_i,w,c
  1509  007C4A  B0D8               	btfsc	status,0,c
  1510  007C4C  D00A               	goto	l52
  1511                           
  1512                           ;main.c: 86: _delay((unsigned long)((10)*(48000000/4000.0)));
  1513  007C4E  0E9C               	movlw	156
  1514  007C50  6E01               	movwf	??_Delay1Second& (0+255),c
  1515  007C52  0ED7               	movlw	215
  1516  007C54                     u397:
  1517  007C54  2EE8               	decfsz	wreg,f,c
  1518  007C56  D7FE               	goto	u397
  1519  007C58  2E01               	decfsz	??_Delay1Second& (0+255),f,c
  1520  007C5A  D7FC               	goto	u397
  1521  007C5C  4A2A               	infsnz	_i,f,c
  1522  007C5E  2A2B               	incf	_i+1,f,c
  1523  007C60  D7EE               	goto	L1
  1524  007C62                     l52:
  1525  007C62  0012               	return	
  1526  007C64                     __end_of_Delay1Second:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           intcon	equ	0xFF2
  1533                           wreg	equ	0xFE8
  1534                           indf2	equ	0xFDF
  1535                           fsr2h	equ	0xFDA
  1536                           fsr2l	equ	0xFD9
  1537                           status	equ	0xFD8
  1538                           
  1539 ;; *************** function _OpenUSART *****************
  1540 ;; Defined at:
  1541 ;;		line 74 in file "C:\Arquivos de programas\Microchip\xc8\v1.21\sources\pic18\plib\USART\uopen.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  config          1    0[COMRAM] unsigned char 
  1544 ;;  spbrg           2    1[COMRAM] unsigned int 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;		None               void
  1549 ;; Registers used:
  1550 ;;		wreg, status,2
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         3       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1559 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1560 ;;Total ram usage:        3 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_main
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text15
  1570  007D70                     __ptext15:
  1571                           	opt stack 0
  1572  007D70                     _OpenUSART:
  1573                           	opt stack 30
  1574                           
  1575                           ;incstack = 0
  1576                           ;incstack = 0
  1577  007D70  0E00               	movlw	0
  1578  007D72  6EAC               	movwf	4012,c	;volatile
  1579  007D74  0E00               	movlw	0
  1580  007D76  6EAB               	movwf	4011,c	;volatile
  1581  007D78  B001               	btfsc	OpenUSART@config,0,c
  1582  007D7A  88AC               	bsf	4012,4,c	;volatile
  1583  007D7C  A201               	btfss	OpenUSART@config,1,c
  1584  007D7E  D002               	goto	l114
  1585  007D80  8CAC               	bsf	4012,6,c	;volatile
  1586  007D82  8CAB               	bsf	4011,6,c	;volatile
  1587  007D84                     l114:
  1588  007D84  B401               	btfsc	OpenUSART@config,2,c
  1589  007D86  8EAC               	bsf	4012,7,c	;volatile
  1590  007D88  A601               	btfss	OpenUSART@config,3,c
  1591  007D8A  D002               	goto	l116
  1592  007D8C  88AB               	bsf	4011,4,c	;volatile
  1593  007D8E  D001               	goto	l117
  1594  007D90                     l116:
  1595  007D90  8AAB               	bsf	4011,5,c	;volatile
  1596  007D92                     l117:
  1597  007D92  B801               	btfsc	OpenUSART@config,4,c
  1598  007D94  84AC               	bsf	4012,2,c	;volatile
  1599  007D96  989E               	bcf	3998,4,c	;volatile
  1600  007D98  BA01               	btfsc	OpenUSART@config,5,c
  1601  007D9A  86AB               	bsf	4011,3,c	;volatile
  1602  007D9C  AC01               	btfss	OpenUSART@config,6,c
  1603  007D9E  D002               	goto	l120
  1604  007DA0  8A9D               	bsf	3997,5,c	;volatile
  1605  007DA2  D001               	goto	l121
  1606  007DA4                     l120:
  1607  007DA4  9A9D               	bcf	3997,5,c	;volatile
  1608  007DA6                     l121:
  1609  007DA6  9A9E               	bcf	3998,5,c	;volatile
  1610  007DA8  AE01               	btfss	OpenUSART@config,7,c
  1611  007DAA  D002               	goto	l122
  1612  007DAC  889D               	bsf	3997,4,c	;volatile
  1613  007DAE  D001               	goto	l123
  1614  007DB0                     l122:
  1615  007DB0  989D               	bcf	3997,4,c	;volatile
  1616  007DB2                     l123:
  1617  007DB2  C002  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1618  007DB6  5003               	movf	OpenUSART@spbrg+1,w,c
  1619  007DB8  6EB0               	movwf	4016,c	;volatile
  1620  007DBA  8AAC               	bsf	4012,5,c	;volatile
  1621  007DBC  8EAB               	bsf	4011,7,c	;volatile
  1622  007DBE  9C94               	bcf	3988,6,c	;volatile
  1623  007DC0  8E94               	bsf	3988,7,c	;volatile
  1624  007DC2  B8AC               	btfsc	4012,4,c	;volatile
  1625  007DC4  BEAC               	btfsc	4012,7,c	;volatile
  1626  007DC6  D001               	goto	l125
  1627  007DC8  8C94               	bsf	3988,6,c	;volatile
  1628  007DCA                     l125:
  1629  007DCA  0012               	return	
  1630  007DCC                     __end_of_OpenUSART:
  1631                           	opt stack 0
  1632                           tblptru	equ	0xFF8
  1633                           tblptrh	equ	0xFF7
  1634                           tblptrl	equ	0xFF6
  1635                           tablat	equ	0xFF5
  1636                           intcon	equ	0xFF2
  1637                           wreg	equ	0xFE8
  1638                           indf2	equ	0xFDF
  1639                           fsr2h	equ	0xFDA
  1640                           fsr2l	equ	0xFD9
  1641                           status	equ	0xFD8
  1642                           tblptru	equ	0xFF8
  1643                           tblptrh	equ	0xFF7
  1644                           tblptrl	equ	0xFF6
  1645                           tablat	equ	0xFF5
  1646                           intcon	equ	0xFF2
  1647                           wreg	equ	0xFE8
  1648                           indf2	equ	0xFDF
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           
  1653                           	psect	rparam
  1654  0000                     tblptru	equ	0xFF8
  1655                           tblptrh	equ	0xFF7
  1656                           tblptrl	equ	0xFF6
  1657                           tablat	equ	0xFF5
  1658                           intcon	equ	0xFF2
  1659                           wreg	equ	0xFE8
  1660                           indf2	equ	0xFDF
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8


Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ?___lwmod	unsigned int  size(2) Largest target is 0

    ?___lwdiv	unsigned int  size(2) Largest target is 0

    ?_utoa	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    ?_ReadADC	int  size(2) Largest target is 0

    ?_itoa	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    putsUSART@data	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 

    putrsUSART@data	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_3(CODE[11]), STR_2(CODE[9]), STR_1(CODE[6]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 5
		 -> main@valorad_ascii(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _putsUSART->_WriteUSART
    _itoa->_utoa
    _utoa->___lwdiv
    _putrsUSART->_WriteUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    11      5    1000
                                             25 COMRAM    16    11      5
                          _OpenUSART
                       _Delay1Second
                          _ReadUSART
                         _putrsUSART
                         _WriteUSART
                            _OpenADC
                         _SetChanADC
                         _ConvertADC
                            _BusyADC
                            _ReadADC
                               _itoa
                          _putsUSART
 ---------------------------------------------------------------------------------
 (1) _putsUSART                                            2     0      2      45
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6     520
                                             17 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6     410
                                              8 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     105
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     105
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     1      1      15
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     2      3     105
                                              0 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (1) _putrsUSART                                           2     0      2      45
                                              1 COMRAM     2     0      2
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _WriteUSART                                           1     0      1      15
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ReadUSART                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Delay1Second                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            3     0      3     150
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenUSART
   _Delay1Second
   _ReadUSART
   _putrsUSART
     _WriteUSART
   _WriteUSART
   _OpenADC
   _SetChanADC
   _ConvertADC
   _BusyADC
   _ReadADC
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _putsUSART
     _WriteUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     29      2C       1       46.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       3       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      20        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu May 28 10:24:17 2015

                      _i 002A              __CFG_CP1$ON 000000              __CFG_CP2$ON 000000  
            __CFG_CP3$ON 000000                       l52 7C62                       l79 7E24  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
                    l120 7DA4                      l121 7DA6                      l122 7DB0  
                    l114 7D84                      l123 7DB2                      l116 7D90  
                    l125 7DCA                      l117 7D92                      l133 7C64  
                    l145 7C0E                      l171 7BC2                      l158 7BFE  
                    l703 7D10                      l911 7D3C                      l921 7D5C  
                    l913 7D40                      l593 7EA8                      l931 7CEE  
                    l909 7D34                      l693 7D66                      l933 7CF2  
                    l937 7D06                      l929 7CE6                      l961 7E30  
                    l971 7E6A                      l997 7CB6             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000                      u397 7C54                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1023 7F02  
                   l1053 7F9C                     l1037 7F3A                     l1047 7F68  
                   STR_1 0816                     STR_2 0813                     STR_3 0808  
           __CFG_PWRT$ON 000000             __CFG_WRTB$ON 000000                     _main 7ECC  
                   _itoa 7C92                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     _utoa 7E28                     start 0804  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000          __end_of_BusyADC 7BAE  
        __end_of_ReadADC 7BB8          __end_of_OpenADC 7E28            __CFG_PLLDIV$5 000000  
                  ?_main 001A                    ?_itoa 0012                    ?_utoa 0009  
        __end_of___lwdiv 7D70          __end_of___lwmod 7D1A                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _SPBRG 000FAF            __CFG_USBDIV$2 000000  
                  _TXREG 000FAD                    _TXSTA 000FAC            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000               _ConvertADC 7BA4  
                  tablat 000FF5                    utoa@c 0011                    utoa@v 000F  
                  status 000FD8    __size_of_Delay1Second 002E           WriteUSART@data 0001  
        __initialization 7BDC             __end_of_main 8000             __end_of_itoa 7CD4  
           __end_of_utoa 7ECC                   ??_main 001F                   ??_itoa 0018  
                 ??_utoa 000F            __activetblptr 000001               _SetChanADC 7BC8  
        __CFG_CCP2MX$OFF 000000                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
           _Delay1Second 7C36       __size_of_ReadUSART 001E                   _SPBRGH 000FB0  
              ??_BusyADC 0001                ??_ReadADC 0003           __CFG_VREGEN$ON 000000  
              ??_OpenADC 0004           __CFG_XINST$OFF 000000       __size_of_OpenUSART 005C  
         __CFG_STVREN$ON 000000                ??___lwdiv 0005                ??___lwmod 0005  
         putrsUSART@data 0002                   itoa@cp 0018             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
            ?_ConvertADC 0001               __accesstop 0060  __end_of__initialization 7BE2  
        __CFG_PBADEN$OFF 000000               _WriteUSART 7BB8           __pcstackCOMRAM 0001  
      __end_of_ReadUSART 7C0E              ?_SetChanADC 0001            ReadUSART@data 0001  
      __end_of_OpenUSART 7DCC            putsUSART@data 0002      __size_of_ConvertADC 0004  
     __size_of_putsUSART 0028                  _BusyADC 7BA8                  _ReadADC 7BAE  
                _OpenADC 7DCC                  __Hparam 0000      __size_of_SetChanADC 0014  
                __Lparam 0000              ?_WriteUSART 0001                  ___lwdiv 7D1A  
                ___lwmod 7CD4             __psmallconst 0808                  __pcinit 7BDC  
                __ramtop 0800                  __ptext0 7ECC                  __ptext1 7C0E  
                __ptext2 7C92                  __ptext3 7E28                  __ptext4 7CD4  
                __ptext5 7D1A                  __ptext6 7BAE                  __ptext7 7BA8  
                __ptext8 7BA4                  __ptext9 7BC8           OpenADC@config2 0002  
   end_of_initialization 7BE2                  itoa@buf 0012                  itoa@val 0014  
              _RCSTAbits 000FAB        __end_of_putsUSART 7C36                  utoa@buf 0009  
                utoa@val 000B                _PORTBbits 000F81                _TRISBbits 000F93  
              _TRISCbits 000F94      __size_of_WriteUSART 0010             ??_ConvertADC 0001  
             _putrsUSART 7C64                _TXSTAbits 000FAC        main@valorad_ascii 0022  
     __end_of_ConvertADC 7BA8             ??_SetChanADC 0002      start_initialization 7BDC  
              _ReadUSART 7BF0                _OpenUSART 7D70       __end_of_SetChanADC 7BDC  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 002A               ?_ReadUSART 0001  
    __end_of__stringdata 081C               ?_OpenUSART 0001              ?_putrsUSART 0002  
               ?_BusyADC 0001                 ?_ReadADC 0001        OpenADC@portconfig 0003  
               ?_OpenADC 0001         ___lwdiv@dividend 0001             ??_WriteUSART 0002  
               ?___lwdiv 0001                 ?___lwmod 0001              __smallconst 0808  
       ___lwdiv@quotient 0006            ?_Delay1Second 0001       __end_of_WriteUSART 7BC8  
          OpenADC@config 0001                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
       __CFG_WDTPS$32768 000000               _ADCON0bits 000FC2                _putsUSART 7C0E  
            __stringdata 0808      __size_of_putrsUSART 002E              ??_ReadUSART 0001  
         ??_Delay1Second 0001              ??_OpenUSART 0004          OpenUSART@config 0001  
       __size_of_BusyADC 0006         __size_of_ReadADC 000A                 __Hrparam 0000  
       __size_of_OpenADC 005C                 __Lrparam 0000             __Lsmallconst 0808  
       __size_of___lwdiv 0056         __size_of___lwmod 0046               ?_putsUSART 0002  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0008                 __ptext10 7DCC  
               __ptext11 7C64                 __ptext12 7BB8                 __ptext13 7BF0  
               __ptext14 7C36                 __ptext15 7D70            __size_of_main 0134  
          __size_of_itoa 0042            __size_of_utoa 00A4                 main@dado 0029  
               main@argc 001A                 main@argv 001C          main@valorad_int 0027  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2           OpenUSART@spbrg 0002  
               itoa@base 0016         ___lwmod@dividend 0001             ??_putrsUSART 0004  
      SetChanADC@channel 0001     __end_of_Delay1Second 7C64              ??_putsUSART 0004  
               utoa@base 000D          ___lwmod@divisor 0003       __end_of_putrsUSART 7C92  
        ___lwmod@counter 0006       __CFG_FOSC$HSPLL_HS 000000             _USART_Status 002C  
